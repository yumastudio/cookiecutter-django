version: '3'

volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    image: {{ cookiecutter.project_slug }}_production_django
    container_name: {{ cookiecutter.project_slug }}_production_django
    depends_on:
      - postgres
      - redis
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
      - ./.envs/.django
    environment:
      - VIRTUAL_HOST=api.{{ cookiecutter.domain_name }}
      - LETSENCRYPT_HOST=api.{{ cookiecutter.domain_name }}
    networks:
      - nginxproxy_network
      - {{ cookiecutter.project_slug }}_production_network
    expose:
      - "8000"
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: {{ cookiecutter.project_slug }}_production_postgres
    container_name: {{ cookiecutter.project_slug }}_production_postgres
    volumes:
      - production_postgres_data:/var/lib/postgresql/data:Z
      - production_postgres_data_backups:/backups:z
    env_file:
      - ./.envs/.production/.postgres
    environment:
      - VIRTUAL_HOST=postgres.{{ cookiecutter.domain_name }}
      - LETSENCRYPT_HOST=postgres.{{ cookiecutter.domain_name }}
    networks:
      - nginxproxy_network
      - {{ cookiecutter.project_slug }}_production_network
    expose:
      - "5432"

  redis:
    image: redis:5.0
    container_name: {{ cookiecutter.project_slug }}_production_redis
    networks:
      - {{ cookiecutter.project_slug }}_production_network

  celeryworker:
    <<: *django
    image: {{ cookiecutter.project_slug }}_production_celeryworker
    container_name: {{ cookiecutter.project_slug }}_production_celeryworker
    expose: []
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: {{ cookiecutter.project_slug }}_production_celerybeat
    container_name: {{ cookiecutter.project_slug }}_production_celerybeat
    expose: []
    command: /start-celerybeat

  flower:
    <<: *django
    image: {{ cookiecutter.project_slug }}_production_flower
    container_name: {{ cookiecutter.project_slug }}_production_flower
    environment:
      - VIRTUAL_HOST=flower.{{ cookiecutter.domain_name }}
      - LETSENCRYPT_HOST=flower.{{ cookiecutter.domain_name }}
    expose:
      - "5555"
    command: /start-flower

  awscli:
    build:
      context: .
      dockerfile: ./compose/production/aws/Dockerfile
    image: {{ cookiecutter.project_slug }}_production_awscli
    container_name: {{ cookiecutter.project_slug }}_production_awscli
    env_file:
      - ./.envs/.production/.django
    volumes:
      - production_postgres_data_backups:/backups:z

networks:
  {{ cookiecutter.project_slug }}_production_network:
    name: {{ cookiecutter.project_slug }}_production_network
  nginxproxy_network:
    external: true
